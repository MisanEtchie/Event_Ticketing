import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';

import 'createeventscreen.dart';
import 'createticketscreen.dart';

class BuyTicketPage extends StatefulWidget {
  Event event;
  BuyTicketPage({Key? key, required this.event}) : super(key: key);

  @override
  State<BuyTicketPage> createState() => _BuyTicketPageState();
}

class _BuyTicketPageState extends State<BuyTicketPage> {
  var people = 0;
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
          child: Column(
        children: [
          Row(
            children: [
              IconButton(
                icon: Icon(FontAwesomeIcons.angleLeft, color: Colors.black),
                onPressed: () {
                  Navigator.pop(context);
                },
              ),
              Container(
                width: MediaQuery.of(context).size.width * 0.85,
                child: Text(
                  '${widget.event.title} Tickets',
                  style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
                ),
              ),
            ],
          ),
          Expanded(
            child: StreamBuilder<List<Tier>>(
                stream: readTiers(),
                builder: ((context, snapshot) {
                  if (snapshot.hasError) {
                    return Center(
                      child: Text("Something went wrong! ${snapshot.error}"),
                    );
                  } else if (snapshot.hasData) {
                    final tiers = snapshot.data!
                        .where((Tier) => Tier.title == widget.event.title);
                    return Expanded(
                      child: ListView(
                        children: [
                          Container(
                            //width: 120,
                            height: tiers.length.toDouble() * 180,
                            child: Expanded(
                              child: ListView(
                                physics: NeverScrollableScrollPhysics(),
                                //scrollDirection: Axis.horizontal,
                                children: tiers.map(buildTier).toList(),
                              ),
                            ),
                          ),
                        ],
                      ),
                    );
                  } else {
                    return Center(
                      child: CircularProgressIndicator(),
                    );
                  }
                })),
          )
        ],
      )),
    );
  }

  Stream<List<Tier>> readTiers() => FirebaseFirestore.instance
      .collection('tickets')
      //.where((Event) => Event.cat == widget.cat.name)
      .snapshots()
      .map((snapshot) =>
          snapshot.docs.map((doc) => Tier.fromJson(doc.data())).toList());

  Widget buildTier(Tier tier) => Padding(
        padding: const EdgeInsets.all(12.0),
        child: Container(
          height: 150,
          width: double.infinity,
          decoration: BoxDecoration(
              color: Colors.white, borderRadius: BorderRadius.circular(12)),
          child: Padding(
            padding: const EdgeInsets.all(12.0),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Row(
                  children: [
                    Icon(
                      FontAwesomeIcons.ticket,
                      size: 18,
                      color: Colors.pink[300],
                    ),
                    SizedBox(
                      width: 12,
                    ),
                    Text(
                      "${tier.label}.",
                      style:
                          TextStyle(fontWeight: FontWeight.bold, fontSize: 20),
                    ),
                  ],
                ),
                SizedBox(
                  height: 4,
                ),
                Text(
                  "${tier.desc}",
                  style: TextStyle(
                      fontWeight: FontWeight.bold,
                      fontSize: 16,
                      color: Colors.grey[700]),
                ),
                Expanded(
                  child: SizedBox(),
                ),
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    Text(
                      tier.price == 0 ? "Free" : "â‚¦ " + "${tier.price}",
                      style: TextStyle(
                        fontWeight: FontWeight.bold,
                        fontSize: 16,
                      ),
                    ),
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        InkWell(
                          onTap: (() {
                            setState(() {
                              if (people > 0) {
                                people--;
                                //widget.even.ticc = widget.even.ticc - widget.tierr.price;
                                //print(widget.even.ticc);
                                //widget.tierr.bought--;
                                //print(widget.tierr.bought);
                              } else {}
                            });
                          }),
                          child: Container(
                            height: 30,
                            width: 30,
                            margin: EdgeInsets.all(5),
                            decoration: BoxDecoration(
                              color: Colors.pink[300],
                              borderRadius: BorderRadius.circular(7.0),
                            ),
                            child: Center(
                              child: Text(
                                '-',
                                style: TextStyle(
                                    color: Colors.white,
                                    fontWeight: FontWeight.bold,
                                    fontSize: 16.0),
                              ),
                            ),
                          ),
                        ),
                        Container(
                          width: 30,
                          height: 30,
                          child: Center(
                            child: Text(
                              "$people",
                              style: TextStyle(
                                  color: Colors.grey[800],
                                  fontWeight: FontWeight.bold,
                                  fontSize: 16.0),
                            ),
                          ),
                        ),
                        InkWell(
                          onTap: (() {
                            setState(() {
                              if (people < 10) {
                                people++;
                                //widget.even.ticc = widget.even.ticc + widget.tierr.price;
                                //print(widget.even.ticc);
                                //widget.tierr.bought++;

                                //print(widget.tierr.bought);
                              } else {}
                            });
                          }),
                          child: Container(
                            height: 30,
                            width: 30,
                            margin: EdgeInsets.all(5),
                            decoration: BoxDecoration(
                              color: Colors.pink[300],
                              borderRadius: BorderRadius.circular(7.0),
                            ),
                            child: Center(
                              child: Text(
                                '+',
                                style: TextStyle(
                                    color: Colors.white,
                                    fontWeight: FontWeight.bold,
                                    fontSize: 16.0),
                              ),
                            ),
                          ),
                        )
                      ],
                    )
                  ],
                ),
              ],
            ),
          ),
        ),
      );
}
